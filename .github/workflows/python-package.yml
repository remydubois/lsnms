# This workflow will install Python dependencies, run tests and lint with a variety of Python versions
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

name: Python package

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.8", "3.9", "3.10", "3.11"]
    steps:
    - uses: actions/checkout@v3
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v3
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        python -m pip install --upgrade poetry
        python -m pip install flake8
        python -m poetry install --with dev
    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    - name: Test with pytest
      run: |
        python -m poetry run pytest --benchmark-disable

  run-and-push-benchmarks:
    runs-on: ubuntu-latest
    steps:
      - name: Wait for tests to run and succeed
        uses: lewagon/wait-on-check-action@v1.3.1
        with:
          ref: ${{ github.event.pull_request.head.sha || github.sha }}
          check-name: 'build (3.11)'
          repo-token: ${{ secrets.GITHUB_TOKEN }}
          wait-interval: 10
      - name: Wait for tests to run and succeed
        uses: lewagon/wait-on-check-action@v1.3.1
        with:
          ref: ${{ github.event.pull_request.head.sha || github.sha }}
          check-name: 'build (3.10)'
          repo-token: ${{ secrets.GITHUB_TOKEN }}
          wait-interval: 10
      - name: Wait for tests to run and succeed
        uses: lewagon/wait-on-check-action@v1.3.1
        with:
          ref: ${{ github.event.pull_request.head.sha || github.sha }}
          check-name: 'build (3.9)'
          repo-token: ${{ secrets.GITHUB_TOKEN }}
          wait-interval: 10
      - name: Wait for tests to run and succeed
        uses: lewagon/wait-on-check-action@v1.3.1
        with:
          ref: ${{ github.event.pull_request.head.sha || github.sha }}
          check-name: 'build (3.8)'
          repo-token: ${{ secrets.GITHUB_TOKEN }}
          wait-interval: 10
      - uses: actions/checkout@v3
      - name: Set up Python 3.11
        uses: actions/setup-python@v3
        with:
          python-version: 3.11
      - name: Install dependencies
        run: |
          python -m pip install --upgrade poetry
          python -m poetry install --with dev
      - name: Run benchmarks
        run: python -m poetry run pytest --benchmark-warmup="on" --benchmark-enable --benchmark-autosave
      - name: Log benchmark
        run: poetry run pytest-benchmark compare --group-by="func" > benchmarks-history.txt
      - name: Checkout PR
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: gh pr checkout ${{ github.event.pull_request.number }}
      - name: Add benchmark and history files
        run: |
          git config --global user.name "Continuous Integration"
          git config --global user.email "username@users.noreply.github.com"
          git add .
      - name: Commit benchmark files
        run: git commit -m "(AUTO-GENERATED) Added benchmark files"
      - name: Push changes
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: git push
